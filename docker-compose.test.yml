version: '3.8'
services:
  db_test:
    build: 
      context: .
      dockerfile: ./dockerfiles/Dockerfile.db_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    volumes:
      - db-data-test:/var/lib/postgresql/data
    ports:
      - "${DB_PORT_OUTER}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  flyway_test:
    build: 
      context: .
      dockerfile: ./dockerfiles/Dockerfile.flyway
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_PORT: ${DB_PORT_INNER}
    depends_on:
      db_test:
        condition: service_healthy

  redis_test:
    image: redis:7.2.4
    ports:
      - "${REDIS_PORT_OUTER}:6379"
    volumes:
      - redis-data-test:/data
    environment:
      REDIS_PASS: ${REDIS_PASS}
    command: ["redis-server", "--requirepass", "${REDIS_PASS}", "--appendonly", "yes"]

  inference_api_test:
    build:
        context:  .
        dockerfile: ./dockerfiles/Dockerfile.model_inference_api
    image: inference_api_test_img
    environment:
      REL_API_URL: ${REL_API_URL}
    ports:
      - "8002:8002"
    volumes:
      - ./logs_test/:/var/log/
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "${MODEL_INFERENCE_API_PORT}"]
    depends_on:
      - rel

  data_provider_api_test:
    build:
        context: .
        dockerfile: ./dockerfiles/Dockerfile.data_provider_api
    image: data_provider_api_test_img
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT_INNER}
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT_INNER}
      REDIS_PASS: ${REDIS_PASS}
    ports:
      - "8004:8004"
    volumes:
      - ./logs_test/:/var/log/
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "${DATA_PROVIDER_API_PORT}"]
    depends_on:
      db_test:
        condition: service_healthy
      redis_test:
        condition: service_started

  frontend_test:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.frontend
    environment:
      - WATCHPACK_POLLING=true
    depends_on:
      - data_provider_api_test
  
  scraper_test:
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile.scraper_service
    image: styx_scraper_img
    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      SCRAPER_URL: ${SCRAPER_URL}
    volumes:
      - ./logs_test/:/var/log/
    depends_on:
      db_test:
        condition: service_healthy

volumes:
  db-data-test:
  redis-data-test:
  # react-build-test: