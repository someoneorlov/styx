-- Add tsvector column for full-text search
ALTER TABLE ner_results ADD COLUMN entities_tsvector tsvector;

-- Create GIN index on the tsvector column for efficient searching
CREATE INDEX ner_results_entities_tsvector_idx ON ner_results USING gin(entities_tsvector);

-- Create a function to automatically update the tsvector column
CREATE OR REPLACE FUNCTION update_entities_tsvector() RETURNS trigger AS $$
BEGIN
    NEW.entities_tsvector := to_tsvector('english', string_agg(value, ' ')) FROM jsonb_array_elements_text(NEW.salient_entities_set);
    RETURN NEW;
END
$$ LANGUAGE plpgsql;

-- Create a trigger that updates the tsvector column before insert or update operations
CREATE TRIGGER ner_results_tsvector_update
BEFORE INSERT OR UPDATE OF salient_entities_set ON ner_results
FOR EACH ROW EXECUTE FUNCTION update_entities_tsvector();

-- Manually update existing rows (corrected for jsonb processing)
-- Note: Adjust this part according to your actual data structure and PostgreSQL version
UPDATE ner_results
SET entities_tsvector = to_tsvector('english', (SELECT string_agg(value, ' ') FROM jsonb_array_elements_text(salient_entities_set)));
